
type iBaseTypes struct {
  cc char,
  bb bool,

  a i8,
  b i16,
  c i32,
  d i64,
}

type uBaseTypes struct {
  a u8,
  b u16,
  c u32,
  d u64,
}

type fBaseTypes struct {
  a f32,
  b f64,
}

type pBaseTypes struct {
  b *char,
  x string,
}

fn main() int {
  printf("basetypes...\n")

  ASSERT(1 == sizeof(i8))
  ASSERT(1 == sizeof(u8))

  ASSERT(2 == sizeof(i16))
  ASSERT(2 == sizeof(u16))

  ASSERT(4 == sizeof(i32))
  ASSERT(4 == sizeof(u32))
  ASSERT(4 == sizeof(f32))

  ASSERT(8 == sizeof(i64))
  ASSERT(8 == sizeof(u64))
  ASSERT(8 == sizeof(f64))

  printf(" ...ok\n")
  return 0
}