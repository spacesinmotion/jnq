
use floor, pow from tests.game.math.util

type Clock struct {
  time double
  minute int
  second int 
}

fn NewClock() Clock {
  return Clock{
    time: 0.0,
    minute: 0,
    second: 0
  }
  // cl.display = gfx.new_overlay_text()
  // cl.display:set_scale(3, 3)
  // cl.display:set_position(W - 6 * 24, 8)
  // cl.display:set_color(rgb(224, 53, 34))
  // cl.display:set_text('00:00')
}
  
fn destroy(cl *Clock) {
  // cl.display.destroy()
}

fn update(cl *Clock, dt double){
  cl.time += dt
  s := floor(cl.time) as int
  if (s != cl.second) {
    cl.second = s % 60
    cl.minute = floor(cl.time / 60.0) as int
    //cl.display.set_text(string.format('%02d:%02d', cl.minute, cl.second))
  }
  t := 0.8 - 0.25 * pow(cl.time - s as double, 2.0 / 3.0)
  //cl.display:set_color(t, t, t)
}
