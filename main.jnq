
fn array_ptr_check(vvv *[*]i32) {
  ASSERT(len(vvv) == 32)
  ASSERT((*vvv)[0] == 0)
  (*vvv)[0] = 42
}

fn main(argc i32, argv **char) i32 {
  print("hallo len cap member")

  more_text := ["A", "B", "C"]
  ASSERT(len(more_text) == 3)
  ASSERT(cap(more_text) == 3)
  ASSERT(more_text.len == 3)
  ASSERT(more_text.cap == 3)
  ASSERT(more_text.len_s == 3u)
  ASSERT(more_text.cap_s == 3u)

  vvv := more_text[0: 2]
  ASSERT(len(vvv) == 2)
  ASSERT(cap(vvv) == 2)
  ASSERT(vvv.len == 2)
  ASSERT(vvv.cap == 2)
  ASSERT(vvv.len_s == 2ul)
  ASSERT(vvv.cap_s == 2ul)

  vvv_ptr := &vvv
  ASSERT(len(vvv_ptr) == 2)
  ASSERT(cap(vvv_ptr) == 2)
  ASSERT(vvv_ptr.len == 2)
  ASSERT(vvv_ptr.cap == 2)
  ASSERT(vvv_ptr.len_s == 2ul)
  ASSERT(vvv_ptr.cap_s == 2ul)

  a := new[32]i32{}
  for (i := 0; i < 32; ++i)
    a[i] = i * 2

  ASSERT(a[0] == 0)
  array_ptr_check(a)
  ASSERT(a[0] == 42)

  ASSERT(len(a) == 32)
  ASSERT(cap(a) == 32)
  ASSERT(a.len == 32)
  ASSERT(a.cap == 32)
  ASSERT(a.len_s == 32ul)
  ASSERT(a.cap_s == 32ul)

  a_ptr := &a
  ASSERT(a_ptr.len == 32)
  ASSERT(a_ptr.cap == 32)
  ASSERT(a_ptr.len_s == 32ul)
  ASSERT(a_ptr.cap_s == 32ul)

  delete a

  print("ok")
  return 0
}

